# Take mongo service name to use when it's basically a service
DB_HOST=mongo
# Mongo container port
DB_PORT=27017
# Take rabbitmq service name to use when it's basically a service
RABBITMQ=rabbitmq
# Turn to 0 when come to production ready
DEBUG=1
# CDN service for storing image, video, binary files
CLOUDINARY_URL={{CLOUDINARY_URL}}
# Send email out of the box through using sendgrid
SENDGRID_API_KEY={{SENDGRID_API_KEY}}
# Connect to local mongo database which running in container
MONGO_DATABASE_NAME={{MONGO_DATABASE_NAME}}
# Connect to remote Mongo database service which is standalone running(Recommended when come to Microservice Architecture)
# This remote database will store all user information accessed by thousand of instance(server) at the same time when scale
REMOTE_MONGO_URL={{REMOTE_MONGO_URL}}
# Local postgresql variables
POSTGRES_USER={{LOCAL_POSTGRES_USER}}
POSTGRES_DB={{LOCAL_POSTGRES_DB}}
POSTGRES_PASSWORD={{LOCAL_POSTGRES_PASSWORD}}
PGDATA=/var/lib/postgresql/data/pgdata
# Connect to remote PostgreSQL database service which is standalone running(Recommended when come to Microservice Architecture)
# This remote database will store all user information accessed by thousand of instance(server) at the same time when scale
REMOTE_POSTGRES_URL={{REMOTE_POSTGRES_URL}}
# Credentials will be used to turn on access authentication required on your Mongo local container service
MONGO_INITDB_ROOT_USERNAME={{MONGO_INITDB_ROOT_USERNAME}}
MONGO_INITDB_ROOT_PASSWORD={{MONGO_INITDB_ROOT_PASSWORD}}
# Credentials will be used to turn on access authentication required on your RabbitMQ local container service
RABBITMQ_DEFAULT_USER={{RABBITMQ_DEFAULT_USER}}
RABBITMQ_DEFAULT_PASS={{RABBITMQ_DEFAULT_PASS}}